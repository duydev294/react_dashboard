import * as React from "react"
import Box from "@mui/material/Box"
import CssBaseline from "@mui/material/CssBaseline"
import List from "@mui/material/List"
import ListItem from "@mui/material/ListItem"
import ListItemText from "@mui/material/ListItemText"
import { ApiContext } from '../../context/ApiProvider'

function refreshMessages() {
  const getRandomInt = max => Math.floor(Math.random() * Math.floor(max))

  return Array.from(new Array(50)).map(
    () => messageExamples[getRandomInt(messageExamples.length)]
  )
}

export default function FixedBottomNavigation() {
  const [value, setValue] = React.useState(0)
  const ref = React.useRef(null)
  
  const { chartData } = React.useContext(ApiContext);
 if(chartData) 
 chartData.data.arlert_mess.map(({ mess_alert, type_arlert}, index) => {})

  return(
    <>
    {
        chartData? (
          <Box sx={{ pb: 7 }} ref={ref}>
            <CssBaseline />
            <List
              sx={{
                overflow:'auto',
                width:'100%',
                position:'relative'
              }}
            >
              {chartData.data.arlert_mess.map(({ mess_alert, type_arlert}, index) => {
                let arlert_corlor = '#030787'
                let type_arlert_mask = [1,4,2,3] 
                let arlert = []
                for (let i = 0; i < type_arlert.length; i++) {
                  arlert.push(type_arlert[i] - type_arlert_mask[i]);
                }
                console.log(arlert)
                arlert.forEach((i)=>{
                  if(i === 0.1 && arlert_corlor === "#030787") arlert_corlor = '#635301';
                  if(i >= 0.2) arlert_corlor = '#700000'
                })
                return(
                <ListItem >
                  <p style={{color: arlert_corlor}}>{mess_alert}</p>
                </ListItem>
              )})}
            </List>
          </Box>
        ):null
    }
    
    </>
  )
}

const messageExamples = [
  {
    
    secondary:"I'll be in the neighbourhood this week. Let's grab a bite to eat",
    
  },
  {
    
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
   
  },
  {
   
    secondary:
      "I am try out this new BBQ recipe, I think this might be amazing",
   
  },
  {
   
    secondary: "I have the tickets to the ReactConf for this year.",
   
  },
  {
    
    secondary:"My appointment for the doctor was rescheduled for next Saturday.",
    
  },
  {
  
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
   
  },
  {
    
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
   
  }
]
